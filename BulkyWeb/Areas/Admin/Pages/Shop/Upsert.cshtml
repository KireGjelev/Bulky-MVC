@page "{id:int}"
@model BulkyWeb.Areas.Admin.Pages.Shop.UpsertModel
@{
}
<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2"> @(Model.ShopVM.Shop.Id != 0 ? "Update" : "Create") Shop</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" class="row" enctype="multipart/form-data">
            <input asp-for="ShopVM.Shop.Id" hidden />

            <div class="row">
                <div class="col-6">
                    <div class="border p-3">
                        <div class="form-floating py-2 col-12">
                            <input value="@Model.ShopVM.Shop.Name" asp-for="ShopVM.Shop.Name" class="form-control border-0 shadow" />
                            <label asp-for="ShopVM.Shop.Name" class="ms-2">Name</label>
                            <span asp-validation-for="ShopVM.Shop.Name" class="text-danger"></span>
                        </div>

                        <div class="form-floating py-2 col-12">
                            <input asp-for="ShopVM.Shop.Location.X" class="form-control border-0 shadow" id="longitude" readonly />
                            <label asp-for="ShopVM.Shop.Location.X" class="ms-2">Longitude</label>
                            <span asp-validation-for="ShopVM.Shop.Location.X" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="ShopVM.Shop.Location.Y" class="form-control border-0 shadow" id="latitude" readonly />
                            <label asp-for="ShopVM.Shop.Location.Y" class="ms-2">Latitude</label>
                            <span asp-validation-for="ShopVM.Shop.Location.Y" class="text-danger"></span>
                        </div>

                        <div class="row pt-2">
                            <div class="col-6 col-md-3">
                                @if (Model.ShopVM.Shop.Id != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-page="/Shop/Index" class="btn btn-outline-primary border form-control">
                                    Back to List
                                </a>
                            </div>

                        </div>
                    </div>

                </div>

                <div class="col-6">
                    <div class="border p-3">
                        <div id="map" style="width:100%;height:300px;"></div>
                    </div>
                </div>

                
            </div>

        </form>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/ol@9.0.0/dist/ol.js"></script>

<script>
    // Initialize the map
    function initMap() {
        //Pins
        var vectorSource = new ol.source.Vector();

        var vectorLayer = new ol.layer.Vector({
            source: vectorSource
        });

        var map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                }),
                vectorLayer 
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([21.717, 41.6086]), 
                zoom: 7.5 
            })
        });

        //Last added pin feature
        var lastPinFeature;

        map.on('click', function (event) {
            var lonLat = ol.proj.toLonLat(event.coordinate);

            if (lastPinFeature) {
                vectorSource.removeFeature(lastPinFeature);
            }

            //Point geometry representing the pin
            var pinFeature = new ol.Feature({
                geometry: new ol.geom.Point(event.coordinate)
            });

            vectorSource.addFeature(pinFeature);

            document.getElementById('longitude').value = lonLat[1];
            document.getElementById('latitude').value = lonLat[0];

            lastPinFeature = pinFeature;
        });

        var isEditMode = @Model.ShopVM.Shop.Id != 0;

        if (isEditMode) {
            var longitude = @Model.ShopVM.Shop.Location.X;
            var latitude = @Model.ShopVM.Shop.Location.Y;
            map.getView().setCenter(ol.proj.fromLonLat([latitude, longitude]));
            map.getView().setZoom(14); 
            
            var existingPinFeature = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.fromLonLat([latitude, longitude]))
            });
            vectorSource.addFeature(existingPinFeature);
            lastPinFeature = existingPinFeature;
        }
    }

    window.onload = function () {
        initMap();
    };
</script>




@section Scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons  lists   table visualblocks wordcount',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough |  align lineheight | numlist bullist indent outdent',
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}